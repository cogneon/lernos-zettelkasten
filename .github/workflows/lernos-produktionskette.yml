name: lernOS Produktionskette

on: push

jobs:
  convert_via_pandoc:
    runs-on: ubuntu-latest
    steps:
      # Repository auschecken, damit Workflow es nutzen kann
      - uses: actions/checkout@v3


      ## Build german learning path
      # Delete Old Versions de
      - run: rm -rf ./de/${{ github.event.repository.name }}-guide.*
      - run: rm -rf ./docs/de/*


      # Create Chapter List de
      - name: Create Chapter List de
        id: chapter_list_de
        run: echo "chapters=$(printf '%s ' ./de/src/[0-9]*.md)" >> "$GITHUB_OUTPUT"


      # Create Microsoft Word Version (docx) de
      - uses: docker://pandoc/core
        with:
          args: >-
            ./de/metadata.yaml
            --standalone
            --resource-path=./de/src
            --number-sections
            --toc
            -V lang=de-de
            --output=./de/${{ github.event.repository.name }}-guide.docx
            ./de/src/index.md ${{ steps.chapter_list.outputs.chapters }}


      # Create HTML Version (html) de
      - uses: docker://pandoc/core
        with:
          args: >-
            ./de/metadata.yaml
            --standalone
            --resource-path=./de/src
            --number-sections
            --toc
            -V lang=de-de
            --output=./de/${{ github.event.repository.name }}-guide.html
            ./de/src/index.md ${{ steps.chapter_list.outputs.chapters }}


      # Create eBook Version (epub) de
      - uses: docker://pandoc/core
        with:
          args: >-
            ./de/metadata.yaml
            --standalone
            --resource-path=./de/src
            --number-sections
            --toc
            -V lang=de-de
            --output=./de/${{ github.event.repository.name }}-guide.epub
            ./de/src/index.md ${{ steps.chapter_list.outputs.chapters }}


      # Create PDF Version (pdf) de
      - uses: docker://pandoc/extra
        with:
          args: >-
            ./de/metadata.yaml
            --standalone
            --resource-path=./de/src
            --number-sections
            --toc
            -V lang=de-de
            --template /.pandoc/templates/eisvogel.latex
            --output=./de/${{ github.event.repository.name }}-guide.pdf
            ./de/src/index.md ${{ steps.chapter_list.outputs.chapters }}


      # Create Web Version (mkdocs) de
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: mkdocs build -f ./de/mkdocs.yml


      # Execute Copy and Archive Script de
      - name: bulid vault de
        run: bash ./de/build_vault.sh


      ## Bulid english learning path
      # Delete Old Versions en
      - run: rm -rf ./en/${{ github.event.repository.name }}-guide.*
      - run: rm -rf ./docs/en/*


      # Create Chapter List en
      - name: Create Chapter List en
        id: chapter_list_en
        run: echo "chapters=$(printf '%s ' ./en/src/[0-9]*.md)" >> "$GITHUB_OUTPUT"


      # Create Microsoft Word Version (docx) en
      - uses: docker://pandoc/core
        with:
          args: >-
            ./en/metadata.yaml
            --standalone
            --resource-path=./en/src
            --number-sections
            --toc
            -V lang=en-en
            --output=./en/${{ github.event.repository.name }}-guide.docx
            ./en/src/index.md ${{ steps.chapter_list.outputs.chapters }}

      # Create HTML Version (html) en
      - uses: docker://pandoc/core
        with:
          args: >-
            ./en/metadata.yaml
            --standalone
            --resource-path=./en/src
            --number-sections
            --toc
            -V lang=en-en
            --output=./en/${{ github.event.repository.name }}-guide.html
            ./en/src/index.md ${{ steps.chapter_list.outputs.chapters }}


      # Create eBook Version (epub) en
      - uses: docker://pandoc/core
        with:
          args: >-
            ./en/metadata.yaml
            --standalone
            --resource-path=./en/src
            --number-sections
            --toc
            -V lang=en-en
            --output=./en/${{ github.event.repository.name }}-guide.epub
            ./en/src/index.md ${{ steps.chapter_list.outputs.chapters }}

      # Create PDF Version (pdf) en
      - uses: docker://pandoc/extra
        with:
          args: >-
            ./en/metadata.yaml
            --standalone
            --resource-path=./en/src
            --number-sections
            --toc
            -V lang=en-en
            --template /.pandoc/templates/eisvogel.latex
            --output=./en/${{ github.event.repository.name }}-guide.pdf
            ./en/src/index.md ${{ steps.chapter_list.outputs.chapters }}

      # Create Web Version (mkdocs) en
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: mkdocs build -f ./en/mkdocs.yml


      # Execute Copy and Archive Script en
      - name: bulid vault en
        run: bash ./en/build_vault.sh


      # Geänderte Datein zurück ins Repository committen
      - name: Auto-commit Changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Erzeugt von automatischer lernOS Produktionskette
